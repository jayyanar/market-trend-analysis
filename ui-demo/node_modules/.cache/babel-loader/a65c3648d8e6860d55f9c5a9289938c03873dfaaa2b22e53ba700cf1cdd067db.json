{"ast":null,"code":"import React,{useState,useEffect}from'react';import UserSelector from'./components/UserSelector';import SessionManager from'./components/SessionManager';import MemoryViewer from'./components/MemoryViewer';import ChatInterface from'./components/ChatInterface';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MEMORY_ID='runtime_us_market_agent_8e082e5c_mem-B1ZetpF2X2';const RUNTIME_ID='runtime_us_market_agent_8e082e5c-HYMo6FF9Qn';const demoUsers=[{id:'Sarah',name:'Sarah Chen',firm:'Goldman Sachs',focus:'Tech stocks, AI, semiconductors',sessions:['session-sarah-1','session-sarah-2','session-sarah-3']},{id:'Mike',name:'Mike Johnson',firm:'JP Morgan',focus:'Healthcare, biotech investments',sessions:['session-mike-1','session-mike-2']},{id:'Lisa',name:'Lisa Wang',firm:'Morgan Stanley',focus:'Energy, renewable investments',sessions:['session-lisa-1']}];function App(){const[selectedUser,setSelectedUser]=useState(demoUsers[0]);const[selectedSession,setSelectedSession]=useState(demoUsers[0].sessions[0]);const[memoryData,setMemoryData]=useState(null);const[sessionHistory,setSessionHistory]=useState([]);const[loading,setLoading]=useState(false);useEffect(()=>{if(selectedUser){fetchMemoryData(selectedUser.id);fetchSessionHistory(selectedSession);}},[selectedUser,selectedSession]);const fetchMemoryData=async actorId=>{setLoading(true);try{// Simulate API call - replace with actual API\nconst mockMemory={actor_id:actorId,profile:selectedUser,memories:[{timestamp:new Date().toISOString(),type:'profile',content:\"Broker Profile: \".concat(selectedUser.name,\" from \").concat(selectedUser.firm,\", focuses on \").concat(selectedUser.focus)},{timestamp:new Date(Date.now()-3600000).toISOString(),type:'conversation',content:'Previous conversation about market trends'}],memory_count:2,last_updated:new Date().toISOString()};setMemoryData(mockMemory);}catch(error){console.error('Error fetching memory:',error);}finally{setLoading(false);}};const fetchSessionHistory=async sessionId=>{try{// Simulate session history - replace with actual API\nconst mockHistory=[{role:'user',content:\"Hi, I'm \".concat(selectedUser.name,\" from \").concat(selectedUser.firm,\". I focus on \").concat(selectedUser.focus,\".\"),timestamp:new Date(Date.now()-7200000).toISOString()},{role:'assistant',content:\"Welcome \".concat(selectedUser.name,\"! I've saved your profile. Given your focus on \").concat(selectedUser.focus,\", I can provide tailored market analysis. What specific information would be most valuable to you today?\"),timestamp:new Date(Date.now()-7100000).toISOString()}];setSessionHistory(mockHistory);}catch(error){console.error('Error fetching session history:',error);}};const handleUserChange=user=>{setSelectedUser(user);setSelectedSession(user.sessions[0]);};const handleSessionChange=sessionId=>{setSelectedSession(sessionId);};const handleNewMessage=(message,response)=>{const newMessages=[...sessionHistory,{role:'user',content:message,timestamp:new Date().toISOString()},{role:'assistant',content:response,timestamp:new Date().toISOString()}];setSessionHistory(newMessages);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Market Trends Agent - AgentCore Memory Demo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"runtime-info\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Memory: \",MEMORY_ID]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Runtime: \",RUNTIME_ID]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(UserSelector,{users:demoUsers,selectedUser:selectedUser,onUserChange:handleUserChange}),/*#__PURE__*/_jsx(SessionManager,{sessions:selectedUser.sessions,selectedSession:selectedSession,onSessionChange:handleSessionChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-panel\",children:/*#__PURE__*/_jsx(MemoryViewer,{memoryData:memoryData,loading:loading})}),/*#__PURE__*/_jsx(\"div\",{className:\"right-panel\",children:/*#__PURE__*/_jsx(ChatInterface,{selectedUser:selectedUser,selectedSession:selectedSession,sessionHistory:sessionHistory,onNewMessage:handleNewMessage,memoryId:MEMORY_ID,runtimeId:RUNTIME_ID})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","UserSelector","SessionManager","MemoryViewer","ChatInterface","jsx","_jsx","jsxs","_jsxs","MEMORY_ID","RUNTIME_ID","demoUsers","id","name","firm","focus","sessions","App","selectedUser","setSelectedUser","selectedSession","setSelectedSession","memoryData","setMemoryData","sessionHistory","setSessionHistory","loading","setLoading","fetchMemoryData","fetchSessionHistory","actorId","mockMemory","actor_id","profile","memories","timestamp","Date","toISOString","type","content","concat","now","memory_count","last_updated","error","console","sessionId","mockHistory","role","handleUserChange","user","handleSessionChange","handleNewMessage","message","response","newMessages","className","children","users","onUserChange","onSessionChange","onNewMessage","memoryId","runtimeId"],"sources":["/Users/jayyanar/Downloads/techxconf-2025/market-trend-analysis/ui-demo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserSelector from './components/UserSelector';\nimport SessionManager from './components/SessionManager';\nimport MemoryViewer from './components/MemoryViewer';\nimport ChatInterface from './components/ChatInterface';\nimport './App.css';\n\nconst MEMORY_ID = 'runtime_us_market_agent_8e082e5c_mem-B1ZetpF2X2';\nconst RUNTIME_ID = 'runtime_us_market_agent_8e082e5c-HYMo6FF9Qn';\n\nconst demoUsers = [\n  {\n    id: 'Sarah',\n    name: 'Sarah Chen',\n    firm: 'Goldman Sachs',\n    focus: 'Tech stocks, AI, semiconductors',\n    sessions: ['session-sarah-1', 'session-sarah-2', 'session-sarah-3']\n  },\n  {\n    id: 'Mike',\n    name: 'Mike Johnson',\n    firm: 'JP Morgan',\n    focus: 'Healthcare, biotech investments',\n    sessions: ['session-mike-1', 'session-mike-2']\n  },\n  {\n    id: 'Lisa',\n    name: 'Lisa Wang',\n    firm: 'Morgan Stanley',\n    focus: 'Energy, renewable investments',\n    sessions: ['session-lisa-1']\n  }\n];\n\nfunction App() {\n  const [selectedUser, setSelectedUser] = useState(demoUsers[0]);\n  const [selectedSession, setSelectedSession] = useState(demoUsers[0].sessions[0]);\n  const [memoryData, setMemoryData] = useState(null);\n  const [sessionHistory, setSessionHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (selectedUser) {\n      fetchMemoryData(selectedUser.id);\n      fetchSessionHistory(selectedSession);\n    }\n  }, [selectedUser, selectedSession]);\n\n  const fetchMemoryData = async (actorId) => {\n    setLoading(true);\n    try {\n      // Simulate API call - replace with actual API\n      const mockMemory = {\n        actor_id: actorId,\n        profile: selectedUser,\n        memories: [\n          {\n            timestamp: new Date().toISOString(),\n            type: 'profile',\n            content: `Broker Profile: ${selectedUser.name} from ${selectedUser.firm}, focuses on ${selectedUser.focus}`\n          },\n          {\n            timestamp: new Date(Date.now() - 3600000).toISOString(),\n            type: 'conversation',\n            content: 'Previous conversation about market trends'\n          }\n        ],\n        memory_count: 2,\n        last_updated: new Date().toISOString()\n      };\n      setMemoryData(mockMemory);\n    } catch (error) {\n      console.error('Error fetching memory:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchSessionHistory = async (sessionId) => {\n    try {\n      // Simulate session history - replace with actual API\n      const mockHistory = [\n        {\n          role: 'user',\n          content: `Hi, I'm ${selectedUser.name} from ${selectedUser.firm}. I focus on ${selectedUser.focus}.`,\n          timestamp: new Date(Date.now() - 7200000).toISOString()\n        },\n        {\n          role: 'assistant',\n          content: `Welcome ${selectedUser.name}! I've saved your profile. Given your focus on ${selectedUser.focus}, I can provide tailored market analysis. What specific information would be most valuable to you today?`,\n          timestamp: new Date(Date.now() - 7100000).toISOString()\n        }\n      ];\n      setSessionHistory(mockHistory);\n    } catch (error) {\n      console.error('Error fetching session history:', error);\n    }\n  };\n\n  const handleUserChange = (user) => {\n    setSelectedUser(user);\n    setSelectedSession(user.sessions[0]);\n  };\n\n  const handleSessionChange = (sessionId) => {\n    setSelectedSession(sessionId);\n  };\n\n  const handleNewMessage = (message, response) => {\n    const newMessages = [\n      ...sessionHistory,\n      {\n        role: 'user',\n        content: message,\n        timestamp: new Date().toISOString()\n      },\n      {\n        role: 'assistant',\n        content: response,\n        timestamp: new Date().toISOString()\n      }\n    ];\n    setSessionHistory(newMessages);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>Market Trends Agent - AgentCore Memory Demo</h1>\n        <div className=\"runtime-info\">\n          <span>Memory: {MEMORY_ID}</span>\n          <span>Runtime: {RUNTIME_ID}</span>\n        </div>\n      </header>\n\n      <div className=\"controls\">\n        <UserSelector \n          users={demoUsers}\n          selectedUser={selectedUser}\n          onUserChange={handleUserChange}\n        />\n        <SessionManager\n          sessions={selectedUser.sessions}\n          selectedSession={selectedSession}\n          onSessionChange={handleSessionChange}\n        />\n      </div>\n\n      <div className=\"main-content\">\n        <div className=\"left-panel\">\n          <MemoryViewer \n            memoryData={memoryData}\n            loading={loading}\n          />\n        </div>\n        \n        <div className=\"right-panel\">\n          <ChatInterface\n            selectedUser={selectedUser}\n            selectedSession={selectedSession}\n            sessionHistory={sessionHistory}\n            onNewMessage={handleNewMessage}\n            memoryId={MEMORY_ID}\n            runtimeId={RUNTIME_ID}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
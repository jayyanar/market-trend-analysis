{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{Send,MessageSquare,Bot,User}from'lucide-react';import agentService from'../services/agentService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatInterface=_ref=>{let{selectedUser,selectedSession,sessionHistory,onNewMessage,memoryId,runtimeId}=_ref;const[message,setMessage]=useState('');const[loading,setLoading]=useState(false);const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(()=>{scrollToBottom();},[sessionHistory]);const handleSubmit=async e=>{e.preventDefault();if(!message.trim()||loading)return;setLoading(true);const userMessage=message;setMessage('');try{console.log('Sending message to AgentCore:',{message:userMessage,user:selectedUser.id,session:selectedSession});// Call real AgentCore Runtime\nconst response=await agentService.invokeAgent(userMessage,selectedUser.id,selectedSession);console.log('Received response from AgentCore:',response);onNewMessage(userMessage,response);}catch(error){console.error('Error sending message:',error);onNewMessage(userMessage,'Sorry, there was an error processing your request. Please try again.');}finally{setLoading(false);}};const getSamplePrompts=()=>{const prompts=[\"Hi, I'm \".concat(selectedUser.name,\" from \").concat(selectedUser.firm,\". I focus on \").concat(selectedUser.focus,\".\"),\"What's the current price for NVDA?\",\"Search for latest AI semiconductor news\",\"What do you remember about my investment preferences?\",\"Give me 3 stock recommendations based on my profile\"];return prompts;};const handleSamplePrompt=prompt=>{setMessage(prompt);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-interface\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsx(MessageSquare,{size:20}),/*#__PURE__*/_jsx(\"h3\",{children:\"Chat with Market Trends Agent\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"session-info\",children:[\"Session: \",selectedSession]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[sessionHistory.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-message\",children:[/*#__PURE__*/_jsx(Bot,{size:24}),/*#__PURE__*/_jsx(\"p\",{children:\"Welcome! Start a conversation to see AgentCore Memory in action.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sample-prompts\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Try these sample prompts:\"}),getSamplePrompts().map((prompt,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"sample-prompt\",onClick:()=>handleSamplePrompt(prompt),disabled:loading,children:prompt},index))]})]}):sessionHistory.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(msg.role),children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-icon\",children:msg.role==='user'?/*#__PURE__*/_jsx(User,{size:16}):/*#__PURE__*/_jsx(Bot,{size:16})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:msg.content}),/*#__PURE__*/_jsx(\"div\",{className:\"message-time\",children:new Date(msg.timestamp).toLocaleTimeString()})]})]},index)),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"message assistant\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-icon\",children:/*#__PURE__*/_jsx(Bot,{size:16})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-text\",children:\"Connecting to AgentCore Runtime...\"})]})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"chat-input\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:e=>setMessage(e.target.value),placeholder:\"Ask about \".concat(selectedUser.focus,\" or test memory with \\\"What's my profile?\\\"...\"),disabled:loading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading||!message.trim(),children:/*#__PURE__*/_jsx(Send,{size:16})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"runtime-info\",children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Runtime: \",runtimeId,\" | Memory: \",memoryId]})})]});};export default ChatInterface;","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","MessageSquare","Bot","User","agentService","jsx","_jsx","jsxs","_jsxs","ChatInterface","_ref","selectedUser","selectedSession","sessionHistory","onNewMessage","memoryId","runtimeId","message","setMessage","loading","setLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","userMessage","console","log","user","id","session","response","invokeAgent","error","getSamplePrompts","prompts","concat","name","firm","focus","handleSamplePrompt","prompt","className","children","size","length","map","index","onClick","disabled","msg","role","content","Date","timestamp","toLocaleTimeString","ref","onSubmit","type","value","onChange","target","placeholder"],"sources":["/Users/jayyanar/Downloads/techxconf-2025/market-trend-analysis/ui-demo/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Send, MessageSquare, Bot, User } from 'lucide-react';\nimport agentService from '../services/agentService';\n\nconst ChatInterface = ({ selectedUser, selectedSession, sessionHistory, onNewMessage, memoryId, runtimeId }) => {\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [sessionHistory]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!message.trim() || loading) return;\n\n    setLoading(true);\n    const userMessage = message;\n    setMessage('');\n\n    try {\n      console.log('Sending message to AgentCore:', {\n        message: userMessage,\n        user: selectedUser.id,\n        session: selectedSession\n      });\n\n      // Call real AgentCore Runtime\n      const response = await agentService.invokeAgent(\n        userMessage, \n        selectedUser.id, \n        selectedSession\n      );\n      \n      console.log('Received response from AgentCore:', response);\n      \n      onNewMessage(userMessage, response);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      onNewMessage(userMessage, 'Sorry, there was an error processing your request. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getSamplePrompts = () => {\n    const prompts = [\n      `Hi, I'm ${selectedUser.name} from ${selectedUser.firm}. I focus on ${selectedUser.focus}.`,\n      \"What's the current price for NVDA?\",\n      \"Search for latest AI semiconductor news\",\n      \"What do you remember about my investment preferences?\",\n      \"Give me 3 stock recommendations based on my profile\"\n    ];\n    return prompts;\n  };\n\n  const handleSamplePrompt = (prompt) => {\n    setMessage(prompt);\n  };\n\n  return (\n    <div className=\"chat-interface\">\n      <div className=\"chat-header\">\n        <MessageSquare size={20} />\n        <h3>Chat with Market Trends Agent</h3>\n        <div className=\"session-info\">\n          Session: {selectedSession}\n        </div>\n      </div>\n\n      <div className=\"chat-messages\">\n        {sessionHistory.length === 0 ? (\n          <div className=\"welcome-section\">\n            <div className=\"welcome-message\">\n              <Bot size={24} />\n              <p>Welcome! Start a conversation to see AgentCore Memory in action.</p>\n            </div>\n            \n            <div className=\"sample-prompts\">\n              <h4>Try these sample prompts:</h4>\n              {getSamplePrompts().map((prompt, index) => (\n                <button\n                  key={index}\n                  className=\"sample-prompt\"\n                  onClick={() => handleSamplePrompt(prompt)}\n                  disabled={loading}\n                >\n                  {prompt}\n                </button>\n              ))}\n            </div>\n          </div>\n        ) : (\n          sessionHistory.map((msg, index) => (\n            <div key={index} className={`message ${msg.role}`}>\n              <div className=\"message-icon\">\n                {msg.role === 'user' ? <User size={16} /> : <Bot size={16} />}\n              </div>\n              <div className=\"message-content\">\n                <div className=\"message-text\">{msg.content}</div>\n                <div className=\"message-time\">\n                  {new Date(msg.timestamp).toLocaleTimeString()}\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        {loading && (\n          <div className=\"message assistant\">\n            <div className=\"message-icon\">\n              <Bot size={16} />\n            </div>\n            <div className=\"message-content\">\n              <div className=\"typing-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n              <div className=\"loading-text\">Connecting to AgentCore Runtime...</div>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <form className=\"chat-input\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder={`Ask about ${selectedUser.focus} or test memory with \"What's my profile?\"...`}\n          disabled={loading}\n        />\n        <button type=\"submit\" disabled={loading || !message.trim()}>\n          <Send size={16} />\n        </button>\n      </form>\n\n      <div className=\"runtime-info\">\n        <small>\n          Runtime: {runtimeId} | Memory: {memoryId}\n        </small>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
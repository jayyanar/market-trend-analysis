{"ast":null,"code":"var _jsxFileName = \"/Users/jayyanar/Downloads/techxconf-2025/market-trend-analysis/ui-demo/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, MessageSquare, Bot, User } from 'lucide-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  selectedUser,\n  selectedSession,\n  sessionHistory,\n  onNewMessage,\n  memoryId,\n  runtimeId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [sessionHistory]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!message.trim() || loading) return;\n    setLoading(true);\n    const userMessage = message;\n    setMessage('');\n    try {\n      // For local testing, simulate API call\n      // Replace with actual AgentCore Runtime API call\n      const response = await simulateAgentResponse(userMessage, selectedUser, selectedSession);\n      onNewMessage(userMessage, response);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      onNewMessage(userMessage, 'Sorry, there was an error processing your request.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const simulateAgentResponse = async (userMessage, user, session) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1500));\n\n    // Mock responses based on message content\n    if (userMessage.toLowerCase().includes('nvda') || userMessage.toLowerCase().includes('nvidia')) {\n      return `Based on your focus on ${user.focus}, NVDA is currently trading at $875.32, up 2.1% today. Given your tech investment strategy at ${user.firm}, this aligns well with your portfolio objectives. The AI chip demand continues to drive growth.`;\n    } else if (userMessage.toLowerCase().includes('profile') || userMessage.toLowerCase().includes('remember')) {\n      return `I remember you're ${user.name} from ${user.firm}, focusing on ${user.focus}. Your profile is stored in my memory and I reference it for all our conversations.`;\n    } else if (userMessage.toLowerCase().includes('news')) {\n      return `Here are the latest news updates relevant to your ${user.focus} focus: Recent developments in AI chip technology show strong growth potential. This aligns with your investment strategy.`;\n    } else {\n      return `Thank you for your message, ${user.name}. As a ${user.firm} broker focused on ${user.focus}, I'll provide analysis tailored to your investment approach. How can I assist you with market intelligence today?`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat with Market Trends Agent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-info\",\n        children: [\"Session: \", selectedSession]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [sessionHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: [/*#__PURE__*/_jsxDEV(Bot, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome! Start a conversation to see AgentCore Memory in action.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : sessionHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.role}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-icon\",\n          children: msg.role === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: new Date(msg.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-icon\",\n          children: /*#__PURE__*/_jsxDEV(Bot, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-input\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: `Ask about ${selectedUser.focus} or say \"What's my profile?\"...`,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading || !message.trim(),\n        children: /*#__PURE__*/_jsxDEV(Send, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"runtime-info\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Runtime: \", runtimeId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"HdHVr3mr4SF6s33dhQYMnnNUzNI=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","MessageSquare","Bot","User","axios","jsxDEV","_jsxDEV","ChatInterface","selectedUser","selectedSession","sessionHistory","onNewMessage","memoryId","runtimeId","_s","message","setMessage","loading","setLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","userMessage","response","simulateAgentResponse","error","console","user","session","Promise","resolve","setTimeout","toLowerCase","includes","focus","firm","name","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","index","role","content","Date","timestamp","toLocaleTimeString","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/jayyanar/Downloads/techxconf-2025/market-trend-analysis/ui-demo/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Send, MessageSquare, Bot, User } from 'lucide-react';\nimport axios from 'axios';\n\nconst ChatInterface = ({ selectedUser, selectedSession, sessionHistory, onNewMessage, memoryId, runtimeId }) => {\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [sessionHistory]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!message.trim() || loading) return;\n\n    setLoading(true);\n    const userMessage = message;\n    setMessage('');\n\n    try {\n      // For local testing, simulate API call\n      // Replace with actual AgentCore Runtime API call\n      const response = await simulateAgentResponse(userMessage, selectedUser, selectedSession);\n      \n      onNewMessage(userMessage, response);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      onNewMessage(userMessage, 'Sorry, there was an error processing your request.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const simulateAgentResponse = async (userMessage, user, session) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    \n    // Mock responses based on message content\n    if (userMessage.toLowerCase().includes('nvda') || userMessage.toLowerCase().includes('nvidia')) {\n      return `Based on your focus on ${user.focus}, NVDA is currently trading at $875.32, up 2.1% today. Given your tech investment strategy at ${user.firm}, this aligns well with your portfolio objectives. The AI chip demand continues to drive growth.`;\n    } else if (userMessage.toLowerCase().includes('profile') || userMessage.toLowerCase().includes('remember')) {\n      return `I remember you're ${user.name} from ${user.firm}, focusing on ${user.focus}. Your profile is stored in my memory and I reference it for all our conversations.`;\n    } else if (userMessage.toLowerCase().includes('news')) {\n      return `Here are the latest news updates relevant to your ${user.focus} focus: Recent developments in AI chip technology show strong growth potential. This aligns with your investment strategy.`;\n    } else {\n      return `Thank you for your message, ${user.name}. As a ${user.firm} broker focused on ${user.focus}, I'll provide analysis tailored to your investment approach. How can I assist you with market intelligence today?`;\n    }\n  };\n\n  return (\n    <div className=\"chat-interface\">\n      <div className=\"chat-header\">\n        <MessageSquare size={20} />\n        <h3>Chat with Market Trends Agent</h3>\n        <div className=\"session-info\">\n          Session: {selectedSession}\n        </div>\n      </div>\n\n      <div className=\"chat-messages\">\n        {sessionHistory.length === 0 ? (\n          <div className=\"welcome-message\">\n            <Bot size={24} />\n            <p>Welcome! Start a conversation to see AgentCore Memory in action.</p>\n          </div>\n        ) : (\n          sessionHistory.map((msg, index) => (\n            <div key={index} className={`message ${msg.role}`}>\n              <div className=\"message-icon\">\n                {msg.role === 'user' ? <User size={16} /> : <Bot size={16} />}\n              </div>\n              <div className=\"message-content\">\n                <div className=\"message-text\">{msg.content}</div>\n                <div className=\"message-time\">\n                  {new Date(msg.timestamp).toLocaleTimeString()}\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        {loading && (\n          <div className=\"message assistant\">\n            <div className=\"message-icon\">\n              <Bot size={16} />\n            </div>\n            <div className=\"message-content\">\n              <div className=\"typing-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <form className=\"chat-input\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder={`Ask about ${selectedUser.focus} or say \"What's my profile?\"...`}\n          disabled={loading}\n        />\n        <button type=\"submit\" disabled={loading || !message.trim()}>\n          <Send size={16} />\n        </button>\n      </form>\n\n      <div className=\"runtime-info\">\n        <small>Runtime: {runtimeId}</small>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}